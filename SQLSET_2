51
====>
create table world(
name varchar(30),
continent varchar(30),
area long ,
population long ,
gdp long ,
primary key(name)
);
drop table world

insert into world values( 'Afghanistan' , 'Asia' , 652230 , 25500100 , 20343000000),
('Albania' , 'Europe' , 28748 , 2831741 , 12960000000),
('Algeria' , 'Africa' , 2381741 , 37100000 , 188681000000),
('Andorra' , 'Europe' , 468 , 78115 , 3712000000),
('Angola' , 'Africa' , 1246700 , 20609294  , 100990000000)

select name , population , area from world
where population > 25000000 and area < 3000000



52 ====>
create table Customer(
id int ,
name varchar(30),
referee_id int  ,
primary key (id)
);

insert into Customer values (1 , 'Will' , null),
(2 , 'Jane' , null),
(3 , 'Alex' , 2) ,
(4 , 'Bill' , null),
(5 , 'Zack' , 1),
(6 , 'Mark' , 2)

select name from Customer where id not in(
 select id  from Customer where referee_id = 2);
 
 
 53 ====>
 create table Customers (
id int ,
name varchar(30),
primary key (id)
);

insert into  Customers values(1 , 'Joe') ,
(2 , 'Henry'),
(3 , 'Sam'),
(4 , 'Max' )


create table Orders(
id int ,
customerId int ,
primary key (id)
);

insert into Orders values(1 , 3),
(2 , 1);

select name from Customers where id not in (
select customerId from Orders)


54
=====>
create  table Employee (
employee_id int ,
team_id int ,
primary key(employee_id)
);

insert into  Employee values (1 , 8),
(2 , 8),
(3 , 8),
(4 , 7),
(5 , 9),
(6 , 9)




select employee_id , 
count(team_id) over(partition by team_id) as team_size 
from Employee


55 
===> understaning issue in question

56
====>
create table Activity(player_id int ,
device_id int ,
event_date date ,
games_played int ,
primary key(player_id, event_date)
);

insert into Activity values(1 ,2 , '2016-03-01' , 5),
(1 , 2 , '2016-05-02' , 6),
(2 , 3 , '2017-06-25' , 1),
(3 , 1 , '2016-03-02' , 0),
(3 , 4 , '2018-07-03' , 5 )



select player_id , device_id from Activity where event_date
in (select  min(event_date) as first_login 
from Activity
group by player_id) 


57
=====>
create table Orders1 (
order_number int ,
customer_number int ,
primary key(order_number)
);

insert into Orders1 values(1 , 1),
(2 , 2),
(3 , 3),
(4  ,3)


select customer_number  from Orders1
 group by customer_number
 order by count(*) desc limit 1 ;
 
 
 
 
58
======>
pending




59====>
pending




60
create table Triangle (
x int ,
y int ,
z int, 
primary key(x ,y ,z)
 );
 
 insert into Triangle values (13 ,15 , 30),
( 10 , 20 , 15) 


select x, y ,z  ,
 case 
   when x+y < z or x+z < y or y+z < x then 'Yes'
   else 'NO'
end as 'triangle'
from Triangle


61
====>
create table Points (
x int ,
primary key(x)
);

insert into Points values (-1),
(0),
(2)

select (abs(p1.x - p2.x)) shorest  from  Points p1
join Points p2
on p1.x <> p2.x




62 
===>
create table ActorDirector(
actor_id int ,
director_id int ,
timestamp int,
primary key(timestamp)
);

insert into ActorDirector values(1 ,1 , 0),
(1 , 1 , 1),
(1 , 1 , 2),
(1 , 2 , 3),
(1 , 2 , 4) ,
(2 , 1 , 5),
(2 , 1 , 6)

select actor_id , director_id from ActorDirector
group by actor_id , director_id
having count(*) >= 3 ;

63

create table Sales(
sale_id int ,
product_id int ,
`year` int ,
quantity int ,
price int ,
primary key(sale_id ,`year`)
);

insert into  sales values (1 , 100 , 2008 , 10 , 5000),
(2 , 100 , 2009 , 12 , 5000),
(7 , 200 , 2011 , 15 , 9000) 


create table Product(
product_id int ,
product_name varchar(30) ,
primary key(product_id)
);

insert into Product values(100 , 'Nokia'),
(200 , 'Apple'),
(300  ,'Samsung');

select p.product_name , s.`year` ,  s.price from Product p
inner join Sales s
on s.product_id = p.product_id


64
==>
create table Project (
project_id int ,
employee_id int ,
primary key(project_id, employee_id)
);
insert into Project values(1 , 1),
(1 , 2),
(1 , 3),
(2 , 1),
(2 , 4)

);
create table Employee1(
employee_id int ,
name varchar(30),
experience_years int ,
primary key(employee_id)
);

insert into Employee1 values (1 , 'Khaled' , 3),
(2 , 'Ali' , 2),
(3 , 'John' , 1),
(4 , 'Doe' , 2)

select p.project_id , round(avg(e.experience_years),2) as average_years
from Project p
inner join Employee1 e
on e.employee_id = p.employee_id
group by project_id


65 
======>
Select a.seller_id
from
(select seller_id, 
rank() over(order by sum(price) desc) as rk
from sales
group by seller_id) a
where a.rk=1


66
=======>

